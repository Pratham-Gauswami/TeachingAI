@model List<TeachingAI1.Models.AssignmentViewModel>
@{
    ViewData["Title"] = "Assignments";
    Layout = "_TeacherLayout";
}

<div class="container-fluid py-4">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h2 mb-1">Assignments</h1>
            <p class="text-muted">Manage and track student assignments</p>
        </div>
        <div>
            <a asp-action="CreateAssignment" class="btn btn-primary">
                <i class="fas fa-plus me-2"></i>Create Assignment
            </a>
        </div>
    </div>

    <!-- Filters and Search -->
    <div class="card mb-4">
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-3">
                    <label for="courseFilter" class="form-label">Filter by Course</label>
                    <select class="form-select" id="courseFilter">
                        <option value="">All Courses</option>
                        <option value="1">Introduction to Programming</option>
                        <option value="2">Data Structures and Algorithms</option>
                        <option value="3">Web Development Fundamentals</option>
                        <option value="4">Database Management Systems</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="statusFilter" class="form-label">Filter by Status</label>
                    <select class="form-select" id="statusFilter">
                        <option value="">All Status</option>
                        <option value="active">Active</option>
                        <option value="draft">Draft</option>
                        <option value="completed">Completed</option>
                        <option value="overdue">Overdue</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="sortBy" class="form-label">Sort By</label>
                    <select class="form-select" id="sortBy">
                        <option value="dueDate">Due Date</option>
                        <option value="title">Title</option>
                        <option value="course">Course</option>
                        <option value="submissionRate">Submission Rate</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="searchAssignment" class="form-label">Search</label>
                    <div class="input-group">
                        <input type="text" class="form-control" id="searchAssignment" placeholder="Search assignments...">
                        <button class="btn btn-primary" type="button">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Assignment Statistics -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="stat-card">
                <div class="stat-card-body">
                    <div class="stat-card-icon" style="background: var(--gradient-1);">
                        <i class="fas fa-tasks"></i>
                    </div>
                    <div class="stat-card-info">
                        <h2 class="stat-card-title">@Model.Count</h2>
                        <p class="stat-card-text">Total Assignments</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-card">
                <div class="stat-card-body">
                    <div class="stat-card-icon" style="background: var(--gradient-2);">
                        <i class="fas fa-hourglass-half"></i>
                    </div>
                    <div class="stat-card-info">
                        <h2 class="stat-card-title">@Model.Count(a => a.Status == "Active")</h2>
                        <p class="stat-card-text">Active Assignments</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-card">
                <div class="stat-card-body">
                    <div class="stat-card-icon" style="background: var(--gradient-3);">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <div class="stat-card-info">
                        <h2 class="stat-card-title">@Model.Sum(a => a.SubmittedCount)</h2>
                        <p class="stat-card-text">Submissions</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-card">
                <div class="stat-card-body">
                    <div class="stat-card-icon" style="background: var(--gradient-4);">
                        <i class="fas fa-exclamation-circle"></i>
                    </div>
                    <div class="stat-card-info">
                        <h2 class="stat-card-title">@Model.Count(a => a.Status == "Overdue")</h2>
                        <p class="stat-card-text">Overdue Assignments</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Assignments List -->
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Assignment</th>
                            <th>Course</th>
                            <th>Due Date</th>
                            <th>Assigned Students</th>
                            <th>Submissions</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var assignment in Model)
                        {
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="me-3">
                                            <i class="fas fa-file-alt fa-2x text-primary"></i>
                                        </div>
                                        <div>
                                            <h6 class="mb-0">@assignment.Title</h6>
                                            <small class="text-muted">@(assignment.Description?.Length > 50 ? assignment.Description.Substring(0, 50) + "..." : assignment.Description)</small>
                                        </div>
                                    </div>
                                </td>
                                <td>@assignment.CourseTitle</td>
                                <td>@assignment.DueDate.ToString("MMM dd, yyyy")</td>
                                <td>@assignment.AssignedStudents</td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="progress flex-grow-1 me-2" style="height: 6px;">
                                            <div class="progress-bar" role="progressbar" 
                                                 style="width: @(assignment.AssignedStudents > 0 ? (assignment.SubmittedCount * 100 / assignment.AssignedStudents) : 0)%;" 
                                                 aria-valuenow="@(assignment.AssignedStudents > 0 ? (assignment.SubmittedCount * 100 / assignment.AssignedStudents) : 0)" 
                                                 aria-valuemin="0" 
                                                 aria-valuemax="100"></div>
                                        </div>
                                        <span>@assignment.SubmittedCount/@assignment.AssignedStudents</span>
                                    </div>
                                </td>
                                <td>
                                    @{
                                        string badgeClass = "bg-primary";
                                        switch (assignment.Status)
                                        {
                                            case "Active":
                                                badgeClass = "bg-primary";
                                                break;
                                            case "Draft":
                                                badgeClass = "bg-secondary";
                                                break;
                                            case "Completed":
                                                badgeClass = "bg-success";
                                                break;
                                            case "Overdue":
                                                badgeClass = "bg-danger";
                                                break;
                                        }
                                    }
                                    <span class="badge @badgeClass">@assignment.Status</span>
                                </td>
                                <td>
                                    <div class="dropdown">
                                        <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="dropdownMenuButton@(assignment.Id)" data-bs-toggle="dropdown" aria-expanded="false">
                                            Actions
                                        </button>
                                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton@(assignment.Id)">
                                            <li><a class="dropdown-item" asp-action="AssignmentDetails" asp-route-id="@assignment.Id"><i class="fas fa-eye me-2"></i>View Details</a></li>
                                            <li><a class="dropdown-item" asp-action="EditAssignment" asp-route-id="@assignment.Id"><i class="fas fa-edit me-2"></i>Edit</a></li>
                                            <li><a class="dropdown-item" href="#"><i class="fas fa-clipboard-check me-2"></i>Grade Submissions</a></li>
                                            <li><a class="dropdown-item" href="#"><i class="fas fa-bell me-2"></i>Send Reminder</a></li>
                                            <li><hr class="dropdown-divider"></li>
                                            <li><a class="dropdown-item text-danger" href="#" data-bs-toggle="modal" data-bs-target="#deleteAssignmentModal" data-assignment-id="@assignment.Id" data-assignment-title="@assignment.Title"><i class="fas fa-trash-alt me-2"></i>Delete</a></li>
                                        </ul>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <nav aria-label="Page navigation" class="mt-4">
                <ul class="pagination justify-content-center">
                    <li class="page-item disabled">
                        <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
                    </li>
                    <li class="page-item active"><a class="page-link" href="#">1</a></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                    <li class="page-item">
                        <a class="page-link" href="#">Next</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

<!-- Delete Assignment Modal -->
<div class="modal fade" id="deleteAssignmentModal" tabindex="-1" aria-labelledby="deleteAssignmentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteAssignmentModalLabel">Delete Assignment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the assignment "<span id="assignmentTitleToDelete"></span>"?</p>
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    This will permanently delete the assignment and all associated submissions. This action cannot be undone.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteAssignment">Delete Assignment</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Handle filter changes
            $('#courseFilter, #statusFilter, #sortBy').change(function() {
                // In a real application, this would filter the data or reload the page with filter parameters
                console.log('Filter changed:', $(this).val());
            });
            
            // Handle search
            $('#searchAssignment').on('keyup', function() {
                var value = $(this).val().toLowerCase();
                $('table tbody tr').filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
            });
            
            // Handle delete assignment modal
            $('#deleteAssignmentModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var assignmentId = button.data('assignment-id');
                var assignmentTitle = button.data('assignment-title');
                var modal = $(this);
                modal.find('#assignmentTitleToDelete').text(assignmentTitle);
                modal.find('#confirmDeleteAssignment').data('assignment-id', assignmentId);
            });
            
            // Handle confirm delete assignment
            $('#confirmDeleteAssignment').click(function() {
                var assignmentId = $(this).data('assignment-id');
                // In a real application, this would send an AJAX request to delete the assignment
                console.log('Deleting assignment with ID:', assignmentId);
                $('#deleteAssignmentModal').modal('hide');
                
                // Show success message (in a real app, this would happen after successful AJAX)
                setTimeout(function() {
                    $('body').append(
                        '<div class="position-fixed top-0 end-0 p-3" style="z-index: 1050">' +
                        '<div id="successToast" class="toast show" role="alert" aria-live="assertive" aria-atomic="true">' +
                        '<div class="toast-header bg-success text-white">' +
                        '<strong class="me-auto">Success</strong>' +
                        '<button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>' +
                        '</div>' +
                        '<div class="toast-body">' +
                        'Assignment has been successfully deleted.' +
                        '</div>' +
                        '</div>' +
                        '</div>'
                    );
                    
                    setTimeout(function() {
                        $('#successToast').toast('hide');
                    }, 3000);
                }, 500);
            });
        });
    </script>
} 